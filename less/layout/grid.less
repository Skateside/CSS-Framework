
#grid {

    .column(@units, @columns, @size) {

        @selector: ~".l-grid_@{size}_@{units}";

        @{selector} {
            min-height:    1px;
            padding-left:  (@grid-gutter / 2);
            padding-right: (@grid-gutter / 2);
            width:         unit(@units * (100 / @columns), ~"%");
        }

    }

    .push(@units, @columns, @size) when (@units > 0) {

        @selector: ~".l-grid_push_@{size}_@{units}";

        @{selector} {
            margin-left: unit(@units * (100 / @columns), ~"%");
        }

    }

    .pull(@units, @columns, @size) when (@units > 0) {

        @selector: ~".l-grid_pull_@{size}_@{units}";

        @{selector} {
            margin-left: -unit(@units * (100 / @columns), ~"%");
        }

    }

    .size(@units, @columns, @size) {

        #grid > .column(@units,     @columns, @size);
        #grid > .push(  @units - 1, @columns, @size);
        #grid > .pull(  @units - 1, @columns, @size);

    }

    .loop(@index, @columns, @size) when (@index > 0) {

        #grid > .size(@index, @columns, @size);
        #grid > .loop(@index - 1, @columns, @size);

    }

    .make(@columns, @size) {
        #grid > .loop(@columns - 1, @columns, @size);
    }

}

/*

    <div class="l-grid">
        <div class="l-grid_md_6"></div>
        <div class="l-grid_md_4"></div>
        <div class="l-grid_md_2"></div>
    </div>

 */

.l-grid {

    &:extend(.u-floated all);

    margin-left:  -(@grid-gutter / 2);
    margin-right: -(@grid-gutter / 2);

}

#grid > .make(@grid-columns, xs);

@media (min-width: @screen-xs) {
    #grid > .make(@grid-columns, sm);
}

@media (min-width: @screen-sm) {
    #grid > .make(@grid-columns, md);
}

@media (min-width: @screen-md) {
    #grid > .make(@grid-columns, lg);
}
